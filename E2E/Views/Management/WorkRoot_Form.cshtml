@model E2E.Models.Views.clsWorkRoots

@{
    Layout = null;
}

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "SaveForm", @class = "was-validated", enctype = "multipath/form-data" }))
{
@Html.AntiForgeryToken()

<div class="modal-header">
    <h5 class="modal-title" id="modalTitle">Form</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.WorkRoots.WorkRoot_Id)

    <div class="form-group">
        @Html.LabelFor(m => m.WorkRoots.Section_Id)
        @Html.DropDownListFor(m => m.WorkRoots.Section_Id, new SelectList(ViewBag.SectionList, "Value", "Text"), new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.WorkRoots.WorkRoot_Name)
        @Html.TextBoxFor(m => m.WorkRoots.WorkRoot_Name, new { @class = "form-control", required = "required" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Document_Id)
        @Html.ListBoxFor(m => m.Document_Id, new SelectList(ViewBag.DocumentList, "Value", "Text", "Selected"), new { @class = "form-control", multiple = "multiple" })
    </div>
</div>
<div class="modal-footer">
    @{
            if (ViewBag.IsNew == false)
            {
        <button type="button" class="btn btn-outline-danger mr-auto" onclick="callDeleteItem('@Url.Action("WorkRoot_Delete","Management",new { id=Html.ValueFor(w=>w.WorkRoots.WorkRoot_Id)})')"><i class="fa fa-trash"></i></button>
            }
    }
    <button type="submit" class="btn btn-primary"><i class="fa fa-check"></i></button>
</div>
}
