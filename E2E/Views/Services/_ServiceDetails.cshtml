@model E2E.Models.Views.ClsServices

@{
    Guid userId = Guid.Parse(HttpContext.Current.User.Identity.Name);
}
@if (Model.Services.Action_User_Id.HasValue && userId == Model.Services.Action_User_Id.Value)
{
<div class="d-flex justify-content-end mb-3">
    @if (Model.Services.Status_Id == 1 || Model.Services.Status_Id == 2)
    {
        <button type="button" class="btn btn-danger" onclick="callModal('@Url.Action("SetRequestReject","Services",new { id = Html.ValueFor(m => m.Services.Service_Id)})')">Request reject</button>
    }
    @if (!Model.Services.Is_MustBeApproved && Model.Services.Status_Id == 1)
    {
        <button type="button" class="btn btn-warning" onclick="callModal('@Url.Action("SetMustApprove","Services",new { id = Html.ValueFor(m => m.Services.Service_Id)})')">Must approved</button>
    }
    @if (Model.Services.Ref_Service_Id.HasValue && !Model.Services.Is_FreePoint && Model.Services.Action_User_Id == userId)
    {
        <button class="btn btn-outline-primary" type="button" onclick="confirmAndPerformAjaxRequest('@Url.Action("SetFreePoint","Services", new { id = Model.Services.Service_Id })','reloadPage')">Free point</button>
    }
</div>
}

<dl class="row">
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Create)</dt>
    <dd class="col-8 col-md-9">@Html.DisplayFor(m => m.Services.Create)</dd>
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.System_Statuses.Status_Name)</dt>
    <dd class="col-8 col-md-9">
        <span class="@Model.Services.System_Statuses.Status_Class">@Html.DisplayFor(m => m.Services.System_Statuses.Status_Name)</span>
    </dd>

    <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Services.Service_Description)</dt>
    <dd class="col-12 col-md-9"><span class="PreLine">@Html.DisplayFor(m => m.Services.Service_Description)</span></dd>
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.System_Priorities.Priority_Name)</dt>
    <dd class="col-8 col-md-9"><span class="@Model.Services.System_Priorities.Priority_Class">@Html.DisplayFor(m => m.Services.System_Priorities.Priority_Name)</span></dd>
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Service_DueDate)</dt>
    <dd class="col-8 col-md-9">
        <b>@Html.DisplayFor(m => m.Services.Service_DueDate)</b><br />

        @if (Model.Services.Status_Id == 2)
        {
            if (Model.ServiceChangeDueDate == null)
            {
                <button class="btn btn-warning" onclick="callModal('@Url.Action("RequestChangeDue_Form","Services", new { id = Model.Services.Service_Id })')">Change due date</button>
            }
            else if (Model.ServiceChangeDueDate.User_Id.Equals(userId))
            {
                <button class="btn btn-outline-danger" onclick="confirmAndPerformAjaxRequest('@Url.Action("RequestChangeDue_Cancel","Services", new { id = Model.ServiceChangeDueDate.ChangeDueDate_Id })', 'reloadPage', { isDangerous: true })">Cancel due date change</button>
            }
        }
    </dd>
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.User_Name)</dt>
    <dd class="col-8 col-md-9">
        <blockquote class="blockquote">
            <small class="text-primary font-weight-bold">@Html.DisplayFor(m => m.User_Name)</small>
            <em class="blockquote-footer small">
                @Html.ValueFor(m => m.Services.Users.Master_Plants.Plant_Name),
                @Html.ValueFor(m => m.Services.Users.Master_Processes.Master_Sections.Master_Departments.Master_Divisions.Division_Name),
                @Html.ValueFor(m => m.Services.Users.Master_Processes.Master_Sections.Master_Departments.Department_Name)
            </em>
        </blockquote>
    </dd>
    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Service_Contact)</dt>
    <dd class="col-8 col-md-9">@Html.DisplayFor(m => m.Services.Service_Contact)</dd>

    @if (Model.Services.Update.HasValue)
    {
        <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Update)</dt>
        <dd class="col-8 col-md-9">@Html.DisplayFor(m => m.Services.Update)</dd>
    }
    @{

        if (Model.Services.Action_User_Id.HasValue)
        {
            <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Action_Name)</dt>
            <dd class="col-12 col-md-9"><b class="text-info">@Html.DisplayFor(m => m.Action_Name)</b></dd>
            if (Model.Services.WorkRoot_Id.HasValue)
            {
                <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Services.WorkRoots.WorkRoot_Name)</dt>
                <dd class="col-12 col-md-9">@Html.DisplayFor(m => m.Services.WorkRoots.WorkRoot_Name)</dd>
            }
            <dt class="col-12 col-md-3">Team</dt>
            <dd class="col-12 col-md-9">
                @if (Model.ClsServiceTeams.Count > 0)
                {
                    <ul>
                        @foreach (var item in Model.ClsServiceTeams)
                        {
                            <li>
                                <div class="d-flex justify-content-between">
                                    @item.User_Name
                                    @if (Model.Services.Status_Id == 2 && Model.Services.Action_User_Id.Value == userId)
                                    {
                                        <a href="#" class="text-danger" onclick="callDeleteItem('@Url.Action("_DeleteTeam","Services",new { id = item.ServiceTeams.Team_Id })',true)"><i class="fa fa-trash"></i></a>
                                    }
                                </div>
                            </li>
                        }
                    </ul>

                }
                @if (Model.Services.Action_User_Id.Value == userId && Model.Services.Status_Id == 2)
                {
                    Html.RenderAction("_AddTeam", "Services", new { id = Model.Services.Service_Id });
                }
            </dd>
        }
    }
    <dt class="col-4 col-md-3">Files</dt>
    <dd class="col-8 col-md-9">
        @Model.ServiceFiles.Count Attachments
        <ul class="list-unstyled">
            @foreach (var item in Model.ServiceFiles.OrderBy(o => o.ServiceFile_Extension))
            {
                <li>
                    <a href="@item.ServiceFile_Path" target="_blank" title="@item.ServiceFile_Name"><i class="fa fa-download"></i>&nbsp;@item.ServiceFile_Name</a>
                </li>

            }
        </ul>
    </dd>

</dl>
@if (Model.Services.WorkRoot_Id.HasValue)
{
    Html.RenderAction("_DocumentList", "Services", new { id = Model.Services.Service_Id });
}