@model E2E.Models.Views.ClsServices

@{
    ViewBag.Title = "Commit";
}
@section scripts{
    <script src="~/Asset/Service.js"></script>
    <script>
        $(function () {
            setTable_File('#reqFiles', true, false);
            setDropdown_Form();
        });

        $('form').submit(function (e) {
            e.preventDefault();
            callSubmitRedirect('@Url.Action("Commit","Services")', this, '@Url.Action("Index","Services")');
            return false;
        });

        $(document).on('submit', "#RejectForm", function (e) {
            e.preventDefault();
            callSubmitRedirect('@Url.Action("SetReject","Services")', this,'@Url.Action("ServiceInfomation", "Services")');
            return false;
        });

        $(document).on('submit', "#MustApproveForm", function (e) {
            e.preventDefault();
            callSubmitRedirect('@Url.Action("SetMustApprove", "Services")', this,'@Url.Action("Index", "Services")');
            return false;
        });
    </script>
}
@section breadcrumb{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Services")">Service</a></li>
            <li class="breadcrumb-item active" aria-current="page">Commit</li>
        </ol>
    </nav>
}
<blockquote class="blockquote text-right">
    <p class="mb-0">[@Model.Services.Service_Key]&nbsp;@Html.DisplayFor(m => m.Services.Service_Subject)</p>
    <small class="blockquote-footer"><cite title="@Html.DisplayFor(m => m.Services.Create)">@Html.DisplayNameFor(m => m.Create_Name): @Html.DisplayFor(m => m.Create_Name)</cite></small>
</blockquote>
<div class="row">
    <div class="col-12 col-lg-8 mb-3 mb-lg-0">
        <div class="card" id="serviceInfo">
            <div class="card-body">
                <div class="row">
                    <div class="col-12 col-md-7 order-md-1">
                        <dl class="row">
                            <dt class="col-12 col-xl-4">@Html.DisplayNameFor(m => m.Services.Service_Description)</dt>
                            <dd class="col-12 col-xl-8"><span class="PreLine">@Html.DisplayFor(m => m.Services.Service_Description)</span></dd>
                            <dt class="col-4">@Html.DisplayNameFor(m => m.User_Name)</dt>
                            <dd class="col-8">
                                <blockquote class="blockquote">
                                    <small class="text-primary font-weight-bold">@Html.DisplayFor(m => m.User_Name)</small>
                                    <em class="blockquote-footer small">
                                        @Html.ValueFor(m => m.Services.Users.Master_Plants.Plant_Name),&nbsp;
                                        @Html.ValueFor(m => m.Services.Users.Master_Processes.Master_Sections.Master_Departments.Master_Divisions.Division_Name),&nbsp;
                                        @Html.ValueFor(m => m.Services.Users.Master_Processes.Master_Sections.Master_Departments.Department_Name)
                                    </em>
                                </blockquote>
                            </dd>
                            <dt class="col-4">@Html.DisplayNameFor(m => m.Services.Service_Contact)</dt>
                            <dd class="col-8">@Html.DisplayFor(m => m.Services.Service_Contact)</dd>
                            @if (Model.Services.Update.HasValue)
                            {
                            <dt class="col-4">@Html.DisplayNameFor(m => m.Services.Update)</dt>
                            <dd class="col-8">@Html.DisplayFor(m => m.Services.Update)</dd>
                            }
                            <dt class="col-4">@Html.DisplayNameFor(m => m.Services.System_Priorities.Priority_Name)</dt>
                            <dd class="col-8"><span class="@Model.Services.System_Priorities.Priority_Class">@Html.DisplayFor(m => m.Services.System_Priorities.Priority_Name)</span></dd>
                            <dt class="col-4">@Html.DisplayNameFor(m => m.Services.Service_DueDate)</dt>
                            <dd class="col-8"><b>@Html.DisplayFor(m => m.Services.Service_DueDate)</b></dd>
                            <dt class="col-4">Files</dt>
                            <dd class="col-8">
                                @Model.ServiceFiles.Count Attachments
                                @if (Model.ServiceFiles.Count > 0)
                                {
                                <ul class="list-unstyled">
                                    @foreach (var item in Model.ServiceFiles.OrderBy(o => o.ServiceFile_Extension))
                                        {
                                    <li>
                                        <a href="@item.ServiceFile_Path" target="_blank" title="@item.ServiceFile_Name"><i class="fa fa-download"></i>&nbsp;@item.ServiceFile_Name</a>
                                    </li>
                                        }
                                </ul>
                                }
                            </dd>
                        </dl>
                        <div class="form-group">
                            <div class="d-flex justify-content-between">
                                @if (!Model.Services.Is_MustBeApproved)
                                {
                                <button type="button" class="btn btn-warning" onclick="callModal('@Url.Action("SetMustApprove","Services",new { id = Html.ValueFor(m => m.Services.Service_Id) })')">Must approved</button>
                                }

                                <button type="button" class="btn btn-secondary" onclick="setCommitToDepartment('@Url.Action("Commit_ToDepartment","Services",new { id = Html.ValueFor(m => m.Services.Service_Id) })','@Url.Action("Index","Services")')">Commit to department</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-5 order-md-0">

                        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "was-validated", @id = "CommitForm", @name = "CommitForm" }))
                        {
                        @Html.ValidationSummary(true)
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Services.Service_Id)
                        <div class="form-group">
                            <label for="plantList">
                                Plant
                            </label>
                            <select class="form-control" id="plantList" required>
                                @{
                                        foreach (var item in ViewBag.PlantList)
                                        {
                                    <option value="@item.Value">@item.Text</option>
                                        }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="divisionList">
                                Division
                            </label>
                            <select class="form-control" id="divisionList" onchange="getSelectOp('@Url.Action("Users_GetSelectDepartments","Masters")',this.value,'#Services_Department_Id')" required>
                                @{
                                        foreach (var item in ViewBag.DivisionList)
                                        {
                                    <option value="@item.Value">@item.Text</option>
                                        }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="Services_Department_Id">Department</label>
                            <select class="form-control" id="Services_Department_Id" name="Services.Department_Id" onchange="getSelectOp('@Url.Action("Users_GetSelectSections","Masters")',this.value,'#sectionList')" required>
                                <option value="">Select Department</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="sectionList">
                                Section
                            </label>
                            <select class="form-control" id="sectionList" onchange="getSelectOp('@Url.Action("Users_GetSelectProcesses","Masters")',this.value,'#processList')">
                                <option value="">Select Section</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="processList">
                                Process
                            </label>
                            <select class="form-control" id="processList" onchange="getSelectOp('@Url.Action("Users_GetSelectUsers","Masters")',this.value,'#Services_Action_User_Id')">
                                <option value="">Select Process</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="Services_Action_User_Id">User</label>
                            <select class="form-control" id="Services_Action_User_Id" name="Services.Action_User_Id">
                                <option value="">Select User</option>
                            </select>
                        </div>
                        <div class="d-flex">
                            <button type="button" class="btn btn-outline-danger" onclick="callModal('@Url.Action("SetReject","Services",new { id = Html.ValueFor(m => m.Services.Service_Id) })')">Reject</button>
                            <button type="submit" class="btn btn-primary ml-auto">Commit</button>
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-lg-4 d-flex align-items-stretch">
        <div class="card w-100" id="serviceComment">
            <div class="card-header">
                <h5 class="card-title">Comments</h5>
            </div>
            <div class="card-body overflow-auto">
                @{ Html.RenderAction("_CommentHistory", "Services", new { id = Model.Services.Service_Id }); }
            </div>
        </div>
    </div>
</div>

@{ Html.RenderAction("_RefService", "Services", new { id = Model.Services.Service_Id }); }
