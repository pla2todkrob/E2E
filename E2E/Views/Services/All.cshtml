@{
    ViewBag.Title = "All";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
    var groupedServices = Model.GroupBy(s => s.Status_Id)
        .OrderBy(o => o.Key)
        .ToList();
}

@section scripts{
    <script>
        $(function () {
            $('table').DataTable({
                "columnDefs": [
                    { "targets": 0, "type": "date" },
                    { "targets": 6, "type": "date" }
                ],
                'order': [[0, 'desc']],
                "scrollX": true
            });

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            });
        });
    </script>
}

@model IEnumerable<E2E.Models.Views.ServiceAll>
@section breadcrumb{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">All services</li>
        </ol>
    </nav>
}

<div class="card shadow">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
            @foreach (var group in groupedServices)
            {
                var status = group.Key; // Status Id
                var statusName = group.First().Status_Name; // Get Status Name
                <li class="nav-item">
                    <a class="nav-link @(status == groupedServices.First().Key ? "active" : "")" id="tab-@status" data-toggle="tab" href="#content-@status" role="tab" aria-controls="content-@status" aria-selected="@(status == groupedServices.First().Key ? "true" : "false")">
                        @statusName
                    </a>
                </li>
            }
        </ul>
    </div>
    <div class="card-body tab-content">
        @foreach (var group in groupedServices)
        {
            var statusId = group.Key;
            <div class="tab-pane fade @(statusId == groupedServices.First().Key ? "show active" : "")" id="content-@statusId" role="tabpanel" aria-labelledby="tab-@statusId">
                <table class="display table table-bordered table-hover nowrap w-100">
                    <thead>
                        <tr>
                            <th class="fit">@Html.DisplayNameFor(m => m.Create)</th>
                            <th class="fit">@Html.DisplayNameFor(m => m.Status_Name)</th>
                            <th>@Html.DisplayNameFor(m => m.Service_Subject)</th>
                            <th class="fit">@Html.DisplayNameFor(m => m.Priority_Name)</th>
                            <th class="fit">@Html.DisplayNameFor(m => m.Plant_Name)</th>
                            <th class="fit">@Html.DisplayNameFor(m => m.Department_Name)</th>
                            <th class="fit">@Html.DisplayNameFor(m => m.Update)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in group)
                        {
                            string txtColor = "";
                            if (item.Is_OverDue)
                            {
                                txtColor = "text-danger";
                            }
                            <tr class="@txtColor">
                                <td>@Html.DisplayFor(i => item.Create)</td>
                                <td class="text-center"><span class="@item.Status_Class">@Html.DisplayFor(i => item.Status_Name)</span></td>
                                <td>
                                    <small class="font-weight-bold">[@Html.DisplayFor(i => item.Service_Key)]</small><br />
                                    <a href="@Url.Action("ServiceInfomation","Services",new { id = item.Service_Id })">@Html.DisplayFor(i => item.Service_Subject)</a>
                                </td>
                                <td class="text-center"><span class="@Html.ValueFor(i => item.Priority_Class)">@Html.DisplayFor(i => item.Priority_Name)</span></td>
                                <td>@Html.DisplayFor(i => item.Plant_Name)</td>
                                <td>@Html.DisplayFor(i => item.Department_Name)</td>
                                <td>@Html.DisplayFor(i => item.Update)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }


    </div>
</div>
