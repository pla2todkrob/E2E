@model IEnumerable<E2E.Models.Tables.ServiceDocuments>

@{
    Layout = null;
    Guid userId = Guid.Parse(HttpContext.Current.User.Identity.Name);
}

@{
    if (Model.Count() > 0)
    {
        <div class="table-responsive">

            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.Master_Documents.Document_Name)</th>
                        <th>@Html.DisplayNameFor(m => m.ServiceDocument_Name)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="fit">
                                @Html.DisplayFor(m => item.Master_Documents.Document_Name)
                                @if (item.Master_Documents.Required)
                                {
                                    <span class="text-danger">*</span>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.ServiceDocument_Name)
                                @if (Guid.Equals(item.Services.Action_User_Id, userId) && !string.IsNullOrEmpty(item.ServiceDocument_Name))
                                {
                                    <button type="button" class="btn" onclick="callModal('@Url.Action("ServiceInfomation_Document","Services",new { id=item.ServiceDocument_Id })')"><i class="fa fa-pencil" aria-hidden="true"></i></button>
                                }
                            </td>
                            <td class="fit">
                                @{
                                    if (!string.IsNullOrEmpty(item.ServiceDocument_Path))
                                    {
                                        <button type="button" class="btn btn-outline-info" onclick="callModal('@Url.Action("ServiceInfomation_View","Services",new { id=item.ServiceDocument_Id })',{bigSize:true})"><i class="fa fa-eye" aria-hidden="true"></i></button>
                                    }
                                    else
                                    {
                                        if (Guid.Equals(item.Services.Action_User_Id, userId))
                                        {
                                            <button type="button" class="btn btn-secondary" onclick="callModal('@Url.Action("ServiceInfomation_Document","Services",new { id=item.ServiceDocument_Id })')"><i class="fa fa-upload" aria-hidden="true"></i></button>
                                        }
                                    }

                                }
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="bg-light">
                        <th colspan="3">
                            <div class="d-flex justify-content-end">
                                <a href="@Url.Action("DownloadDocumentControl","Services",new { id = Model.FirstOrDefault().Service_Id })" class="btn btn-warning"><i class="fa fa-file-archive-o" aria-hidden="true"></i>&nbsp;Download all</a>
                            </div>
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>

    }
}
