@model E2E.Models.Views.clsServices

@{
    ViewBag.Title = "Service information";
    Guid userId = Guid.Parse(HttpContext.Current.User.Identity.Name);
}

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
    <script src="~/Asset/Service.min.js"></script>
    <script>
        $(function () {
            if ($(document).find('#TeamForm').length) {
                $('#TeamForm').find('select').each(function () {
                    $(this).select2({
                        theme: 'bootstrap4',
                        width: '100%'
                    });
                });
            }
            reloadComment();

            chat = $.connection.clsChatHub;

            // Declare a function on the chat hub so the server can invoke it
            chat.client.addChatMessage = function (message) {
                reloadComment();
            };

            $.connection.hub.start(function () {
                chat.server.joinGroup($('#Services_Service_Id').val());
            });
        });

        $(document).on('submit', '#CommentForm', function (e) {
            e.preventDefault();
            var fd = new FormData(this);

            $.ajax({
                url: baseUrl + '/Services/_Comment',
                method: "POST",
                async: true,
                data: fd,
                processData: false,
                contentType: false,
                traditional: true,
                success: function (res) {
                    console.log(res.option.Service_Id);
                    if (res.icon != 'success') {
                        swal({
                            title: res.title,
                            text: res.text,
                            icon: res.icon,
                            button: res.button,
                            dangerMode: res.dangerMode
                        });
                    }
                    else {

                        $.connection.hub.start().done(function () {
                            chat.server.sendMessageToGroup(res.option.Service_Id, res.option.Comment_Content);
                        });
                    }
                }
            });
            return false;
        });

        function reloadComment() {
            $('#commentHis').load('@Url.Action("_CommentHistory", "Services", new { id = Model.Services.Service_Id })');
            $('#commentNew').load('@Url.Action("_Comment", "Services", new { id = Model.Services.Service_Id })');
            adjustHeight().then(function () {
                $('#commentHis').animate({ scrollTop: 5000 });
            });

        }

        function SaveCloseForm() {
            let arr = [];

            swal({
                title: "Are you sure?",
                text: "If the score is already given, it cannot be changed!",
                icon: "warning",
                buttons: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        var id_service = $('#Services_Service_Id').val();
                        $('.score-group').find('.score').each(function () {
                            var obj = {};
                            obj.id = $(this).attr('id');
                            obj.score = $('input[name=' + obj.id + ']:checked').val();
                            arr.push(obj);
                        });

                        $.ajax({
                            type: "POST",
                            data: { id: id_service, score: arr },
                            url: '@Url.Action("SetClose","Services")',
                            success: function (res) {
                                swal({
                                    title: res.title,
                                    text: res.text,
                                    icon: res.icon,
                                    button: res.button,
                                    dangerMode: res.dangerMode
                                }).then(function () {
                                    if (res.icon == 'success') {
                                        location.reload();
                                    }
                                });
                            }
                        });
                    }
                });

            return false;
        }
        function callModalPoint(urlAjax) {
            $.ajax({
                url: urlAjax,
                async: true,
                success: function (res) {

                    $('#modalContent').html(res);

                    $('.Point').click(function () {
                        $(this).find('input').prop('checked',true);
                    });
                }
            });
            $('#modalArea').modal('show');
            return false;
        }

        $(document).on('submit', '#TeamForm', function (e) {
            e.preventDefault();
            callSubmitPage('@Url.Action("_AddTeam", "Services")',this);
            return false;
        });

        $(document).on('submit', '#ReturnForm', function (e) {
            e.preventDefault();
            callSubmitRedirect('@Url.Action("SetPending", "Services")',this,'@Url.Action("Index","Services")');
            return false;
        });

        $(document).on('submit', '#SaveForm', function (e) {
            e.preventDefault();
            callSubmitRedirect('@Url.Action("Form_Forward", "Services")',this,'@Url.Action("Index", "Services")');
            return false;
        });

        $(document).on('submit', '#CompleteForm', function (e) {
            e.preventDefault();
            callSubmitPage('@Url.Action("SetComplete", "Services")',this);
            return false;
        });

        $(document).on('submit', '#SaveDocumentForm', function (e) {
            e.preventDefault();
            callSubmitPage('@Url.Action("ServiceInfomation_Document", "Services")',this);
            return false;
        });
    </script>
}

@section breadcrumb{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="breadcrumb-item active">Profile</li>
            <li class="breadcrumb-item active">Task</li>
            <li class="breadcrumb-item active" aria-current="page">Service information</li>
        </ol>
    </nav>
}

<blockquote class="blockquote text-right">
    <p class="mb-0">[@Model.Services.Service_Key]&nbsp;@Html.DisplayFor(m => m.Services.Service_Subject)</p>
    <small class="blockquote-footer"><cite title="@Html.DisplayFor(m => m.Services.Create)">@Html.DisplayFor(m => m.Services.Create)</cite></small>
</blockquote>
@Html.HiddenFor(m => m.Services.Service_Id)
<div class="row mb-3">
    <div class="col-lg-7 mb-3 mb-lg-0">
        <div class="card" id="serviceInfo">
            <div class="card-header">
                <div class="d-flex justify-content-between">
                    <h5 class="card-title">Service detail</h5>
                    @if (Model.Services.Ref_Service_Id.HasValue)
                    {
                        if (!Model.Services.Is_FreePoint)
                        {
                            if (Model.Services.Action_User_Id.HasValue)
                            {
                                if (Model.Services.Action_User_Id.Equals(userId))
                                {
                                    <button class="btn btn-outline-primary" type="button" onclick="setSuccessByIdRePage('@Url.Action("SetFreePoint","Services",new { id = Model.Services.Service_Id })')">Free point</button>
                                }
                            }
                        }
                    }
                </div>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.System_Statuses.Status_Name)</dt>
                    <dd class="col-8 col-md-9"><span class="@Model.Services.System_Statuses.Status_Class">@Html.DisplayFor(m => m.Services.System_Statuses.Status_Name)</span></dd>
                    <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Services.Service_Description)</dt>
                    <dd class="col-12 col-md-9"><span class="PreLine">@Html.DisplayFor(m => m.Services.Service_Description)</span></dd>
                    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.User_Name)</dt>
                    <dd class="col-8 col-md-9"><b class="text-primary">@Html.DisplayFor(m => m.User_Name)</b></dd>
                    @if (Model.Services.Update.HasValue)
                    {
                        <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Update)</dt>
                        <dd class="col-8 col-md-9">@Html.DisplayFor(m => m.Services.Update)</dd>
                    }

                    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.System_Priorities.Priority_Name)</dt>
                    <dd class="col-8 col-md-9"><span class="@Model.Services.System_Priorities.Priority_Class">@Html.DisplayFor(m => m.Services.System_Priorities.Priority_Name)</span></dd>
                    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Services.Service_DueDate)</dt>
                    <dd class="col-8 col-md-9"><b>@Html.DisplayFor(m => m.Services.Service_DueDate)</b></dd>
                    <dt class="col-4 col-md-3">@Html.DisplayNameFor(m => m.Create_Name)</dt>
                    <dd class="col-8 col-md-9"><b class="text-info">@Html.DisplayFor(m => m.Create_Name)</b></dd>
                    <dt class="col-4 col-md-3">Files</dt>
                    <dd class="col-8 col-md-9">
                        @Model.ServiceFiles.Count Attachments
                        <ul class="list-unstyled">
                            @foreach (var item in Model.ServiceFiles.OrderBy(o => o.ServiceFile_Extension))
                            {
                                <li>
                                    <a href="@item.ServiceFile_Path" target="_blank" title="@item.ServiceFile_Name"><i class="fa fa-download"></i>&nbsp;@item.ServiceFile_Name</a>
                                </li>

                            }
                        </ul>
                    </dd>
                    @{

                        if (Model.Services.Action_User_Id.HasValue)
                        {
                            <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Action_Name)</dt>
                            <dd class="col-12 col-md-9">@Html.DisplayFor(m => m.Action_Name)</dd>
                            if (Model.Services.WorkRoot_Id.HasValue)
                            {
                                <dt class="col-12 col-md-3">@Html.DisplayNameFor(m => m.Services.WorkRoots.WorkRoot_Name)</dt>
                                <dd class="col-12 col-md-9">@Html.DisplayFor(m => m.Services.WorkRoots.WorkRoot_Name)</dd>
                            }
                            <dt class="col-12 col-md-3">Team</dt>
                            <dd class="col-12 col-md-9">
                                @if (Model.ClsServiceTeams.Count > 0)
                                {
                                    <ul>
                                        @foreach (var item in Model.ClsServiceTeams)
                                        {
                                            <li>
                                                <div class="d-flex justify-content-between">
                                                    @item.User_Name
                                                    @if (Model.Services.Status_Id == 2)
                                                    {
                                                        <a href="#" class="text-danger" onclick="callDeleteItem('@Url.Action("_DeleteTeam","Services",new { id = item.ServiceTeams.Team_Id })',true)"><i class="fa fa-trash"></i></a>
                                                    }
                                                </div>
                                            </li>
                                        }
                                    </ul>

                                }
                                @if (Model.Services.Action_User_Id.Value == userId && Model.Services.Status_Id == 2)
                                {
                                    Html.RenderAction("_AddTeam", "Services", new { id = Model.Services.Service_Id });
                                }
                            </dd>
                        }
                    }
                </dl>
                @if (Model.Services.WorkRoot_Id.HasValue)
                {
                    Html.RenderAction("_DocumentList", "Services", new { id = Model.Services.Service_Id });
                }
            </div>
            <div class="card-footer">
                <div class="d-flex">
                    @{
                        if (ViewBag.AuthorizeIndex < 3)
                        {
                            if (Model.Services.Status_Id < 3)
                            {
                                <button class="btn btn-outline-danger mr-1" type="button" onclick="callModal('@Url.Action("SetReject","Services",new { id = Model.Services.Service_Id})')">Reject</button>
                            }

                        }
                        if (Model.Services.Action_User_Id == userId)
                        {
                            if (Model.Services.Status_Id == 2)
                            {
                                <button type="button" class="btn btn-outline-danger" onclick="callModal('@Url.Action("SetReturnJob","Services",new { id = Model.Services.Service_Id })')">Return job</button>
                                <div class="ml-auto">
                                    <button type="button" class="btn btn-outline-secondary" onclick="callModalService('@Url.Action("Form_Forward","Services",new { id=Model.Services.Service_Id })',true)">Forward</button>
                                    <button type="button" class="btn btn-success" onclick="callModal('@Url.Action("SetComplete","Services",new { id = Model.Services.Service_Id })',false)">Complete</button>
                                </div>

                            }

                        }
                        if (Model.Services.User_Id == userId)
                        {
                            if (Model.Services.Status_Id == 3)
                            {
                                <button type="button" class="btn btn-outline-success ml-auto" onclick="callModalPoint('@Url.Action("SetClose","Services",new { id=Model.Services.Service_Id })')">Close</button>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-5">
        <div class="card" id="serviceComment">
            <div class="card-header">
                <h5 class="card-title">Comment</h5>
            </div>
            <div class="card-body overflow-auto" id="commentHis"></div>
            @if (Model.Services.Status_Id < 4)
            {
                <div class="card-footer" id="commentNew"></div>
            }
        </div>
    </div>
</div>

@{ Html.RenderAction("_RefService", "Services", new { id = Model.Services.Service_Id }); }