@model E2E.Models.Views.clsTopic


@{
    ViewBag.Title = "Boards_Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section breadcrumb{
    <nav aria-label="breadcrumb " class="mt-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Boards","Topics")">Topics</a></li>
            <li class="breadcrumb-item active" aria-current="page">Board</li>
        </ol>
    </nav>
}
@section css{

    <link href="~/Content/justifiedGallery.min.css" rel="stylesheet" />

}
@section scripts{
    <script src="~/Asset/Topic.min.js"></script>
    <script src="~/Scripts/jquery.justifiedGallery.min.js"></script>

    <script>
        $(function () {
            $("#mygallery").justifiedGallery({
                rowHeight: 250,
                lastRow:'justify'
            });
        });

        $(document).on('submit', '#SaveComment', function (e) {
            e.preventDefault();
            callSubmit_Reply('@Url.Action("Boards_Comment", "Topics")');
            return false;
        });

$(document).on('submit', '#SaveReply', function (e) {
            e.preventDefault();
            callSubmit_Reply('@Url.Action("Boards_Reply", "Topics")');
            return false;
        });
    </script>
}

<div class="card">
    <div class="card-header">
        <h5 class="card-title">
            [@Html.DisplayFor(m => m.Topics.Users.User_Code)]
            @Html.DisplayFor(m => m.Topics.Topic_Title)
        </h5>
    </div>
    <div class="card-body">
        @Html.DisplayFor(m => m.Topics.Topic_Content)

        @if (Model.TopicGalleries.Count > 0)
        {
            <hr />
            <h5>Galleries</h5>
            <div id="mygallery" class="justified-gallery">
                @foreach (var img in Model.TopicGalleries)
                {


                    <a href="@img.TopicGallery_Original" target="_blank">
                        <img alt="@img.TopicGallery_Name" src="@img.TopicGallery_Original"/>
                    </a>
                    <!-- other images... -->

                }
            </div>
        }

        @if (Model.TopicFiles.Count > 0)
        {
            <hr />
            <h5>Files</h5>
            <ul>
                @foreach (var files in Model.TopicFiles)
                {
                    <li>
                        <a href="@files.TopicFile_Path" target="_blank">@files.TopicFile_Name</a>
                    </li>

                }
            </ul>
        }

    </div>

    <div class="card-footer">
        <div class="d-flex">
            <div class="mr-auto">
                <span class="font-weight-bold">
                    @Html.DisplayNameFor(m => m.Topics.Create):
                </span>
                @Html.DisplayFor(m => m.Topics.Create)
            </div>
            <div class="ml-auto">
                <button class="btn btn-light" onclick="callModal('@Url.Action("Boards_Comment","Topics",new { id = Model.Topics.Topic_Id})',true)"><i class="fa fa-commenting-o"></i></button>@*comment*@
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(m => m.Topics.Topic_Id)

<div class="card">
    <div class="card-body">
        @foreach (var item in Model.TopicComments)
        {
            if (!item.Ref_TopicComment_Id.HasValue)
            {
                <div class="card mb-3">
                    <div class="card-header">
                        <h6 class="card-title">
                            @Html.DisplayFor(i => item.Users.User_Code)
                        </h6>
                    </div>
                    <div class="card-body">
                        @Html.DisplayFor(i => item.Comment_Content)

                    </div>
                    <div class="card-footer">
                        <div class="d-flex">
                            <div class="mr-auto">
                                <span class="font-weight-bold"> @Html.DisplayNameFor(i => item.Create):</span>
                                @Html.DisplayFor(i => item.Create)
                            </div>
                            <div class="ml-auto">
                                <button class="btn btn-light" type="button" onclick="callModal('@Url.Action("Boards_Reply","Topics",new { comment_id = Html.ValueFor(w => item.TopicComment_Id) })',true)"><i class="fa fa-commenting-o"></i></button> @*Reply*@
                                @{
                                    if (string.Equals(item.Users.User_Code, ViewBag.Usercode))
                                    {
                                        <button class="btn btn-light" type="button" onclick="callModal('@Url.Action("Boards_Comment","Topics",new {  id=Html.ValueFor(w=>item.Topic_Id),comment_id = Html.ValueFor(w=>item.TopicComment_Id)})',true)"><i class="fa fa-pencil"></i></button>@*Edit*@
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
                var ReplyComment = Model.TopicComments.Where(w => w.Ref_TopicComment_Id == item.TopicComment_Id).ToList();

                if (ReplyComment.Count > 0)
                {
                    foreach (var item2 in ReplyComment)
                    {
                        <div class="card offset-1 mb-3">
                            <div class="card-header">
                                <h6 class="card-title">
                                    @Html.DisplayFor(i => item2.Users.User_Code)
                                </h6>
                            </div>
                            <div class="card-body">
                                @Html.DisplayFor(i => item2.Comment_Content)

                            </div>
                            <div class="card-footer">
                                <div class="d-flex">
                                    <div class="mr-auto">
                                        <span class="font-weight-bold"> @Html.DisplayNameFor(i => item2.Create):</span>
                                        @Html.DisplayFor(i => item2.Create)
                                    </div>
                                    @{
                                        if (string.Equals(item2.Users.User_Code, ViewBag.Usercode))
                                        {
                                            <button class="btn btn-light" type="button" onclick="callModal('@Url.Action("Boards_Reply","Topics",new {  id=Html.ValueFor(w=>item.Topic_Id),comment_id = Html.ValueFor(w=>item2.TopicComment_Id)})',true)"><i class="fa fa-pencil"></i></button>@*Edit Reply*@
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            }


        }


    </div>
</div>


