@model E2E.Models.Tables.TopicSections

@{
    Layout = null;
}


<div class="modal-header">
    <h5 class="modal-title" id="modalTitle">Section form</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    @using (Html.BeginForm("", "", FormMethod.Post, new { id = "SectionForm", name = "SectionForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.Topic_Id)
        <div class="form-group">
            <label for="fileUpload">Image or Video</label>
            <input type="file" id="fileUpload" name="fileUpload" class="form-control-file" accept="image/*, video/*" />
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.TopicSection_Id)
            @if (!string.IsNullOrEmpty(Model.TopicSection_Path))
            {
                <div id="MediaSC">
                    @if (!string.IsNullOrEmpty(Model.TopicSection_ContentType))
                    {
                        if (Model.TopicSection_ContentType.StartsWith("image"))
                        {
                            <a href="@Model.TopicSection_Path" target="_blank">
                                <img src="@Model.TopicSection_Path" alt="@Model.TopicSection_Name" class="img-fluid img-thumbnail" />
                            </a>
                        }
                        else
                        {
                            <div class="embed-responsive embed-responsive-16by9">
                                <video class="embed-responsive-item" controls>
                                    <source src="@Model.TopicSection_Path" type="@Model.TopicSection_ContentType" />
                                </video>
                            </div>
                        }
                    }
                </div>

                if (!string.IsNullOrEmpty(Model.TopicSection_Path))
                {
                    <div class="mt-3 text-right" id="deleteButton">
                        <button type="button" onclick="callDeleteItem('@Url.Action("Delete_Boards_Section_Attached","Topics",new { id = Html.ValueFor(w=>Model.TopicSection_Id)})', false, { emptyTarget:'#MediaSC', hideTarget:'#deleteButton' })" class="btn btn-danger">Delete</button>
                    </div>
                }
            }
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TopicSection_Title)
            @Html.TextBoxFor(m => m.TopicSection_Title, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TopicSection_Description)
            @Html.TextAreaFor(m => m.TopicSection_Description, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TopicSection_Link)
            @Html.TextBoxFor(m => m.TopicSection_Link, new { @class = "form-control" })
        </div>
    }
</div>

<div class="modal-footer">
    @if (!ViewBag.IsNew)
    {
        <div class="d-flex mr-auto">
            <button type="button" onclick="callDeleteItem('@Url.Action("Delete_Boards_Section","Topics",new { id = Html.ValueFor(w=>Model.TopicSection_Id)})',true)" class="btn btn-outline-danger"><i class="fa fa-trash"></i></button>
        </div>
    }

    <div>
        <button type="submit" form="SectionForm" class="btn btn-primary">Save</button>
    </div>
</div>

