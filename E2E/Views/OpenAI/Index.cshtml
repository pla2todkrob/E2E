@{
	ViewBag.Title = "Index";
}

@section scripts{
	<script>
        const apiKey = getCookie("OpenAI_Key");
        let chatHistory, chatLength, areaText;
        $(function () {
            reloadChatGPT();
        });

        async function appendChatHistory(inputText) {
            inputText = inputText.trim();
            let newItem = document.createElement("li");
            newItem.id = "qa-" + chatLength;
            let ul = null;

            if (chatHistory.children.length === 0 || chatHistory.lastElementChild.children[0].children.length === 2) {
                ul = document.createElement("ul");
                ul.classList.add("list-unstyled");
                newItem.appendChild(ul);
                chatHistory.appendChild(newItem);
            } else {
                ul = chatHistory.lastElementChild.children[0];
            }

            let li = document.createElement("li");

            let p = document.createElement("p");
            p.classList.add('text-prewrap');
            p.classList.add('p-2');
            p.classList.add('rounded');
            p.classList.add('mt-1');

            let small = document.createElement("small");
            small.innerHTML = new Date().toLocaleString();

            if (ul.children.length === 0) {
                p.classList.add('bg-info');
                p.classList.add('text-white');
                p.innerHTML = inputText;
                li.appendChild(small);
                li.appendChild(p);
                li.classList.add("text-right");
                li.classList.add("pl-5");
            } else {
                p.classList.add('bg-light');
                p.innerHTML = inputText;
                li.appendChild(small);
                li.appendChild(p);
                li.classList.add("pr-5");
            }
            ul.appendChild(li);
            areaText.val('');
        }

        function loadQuestion() {
            $.ajax({
                    url: '@Url.Action("Question","OpenAI")',
                    async: true,
                    method: 'GET'
                }).done(d2 => {
                    $('#questionSection').html(d2);
                    areaText = $('#Question');
                    areaText.focus();
                    areaText.keydown(function (e) {
                        if (e.keyCode == 13 && e.shiftKey) {
                            e.preventDefault();
                            $(this).val($(this).val() + "\n");
                        } else if (e.keyCode == 13) {
                            $('form').submit();
                        }
                    });
                    window.scrollTo({ top: $(document).height(), behavior: 'smooth' });
                });
        }

        $(document).on('submit', '#SaveQuestion', function (e) {
            e.preventDefault();
            let txtRequest = areaText.val();
			appendChatHistory(txtRequest).then(function () {

				$('#Question').val(txtRequest);
				$('#Question_Hidden').val(txtRequest);
                $('#QuestionDateTime').val(new Date().toISOString());

                $.ajax({
                    type: "POST",
                    url: "https://api.openai.com/v1/completions",
                    headers: {
                        "Content-Type": "application/json",
                        "Authorization": `Bearer ${apiKey}`
                    },
                    async: true,
                    data: JSON.stringify({
                        prompt: txtRequest,
                        temperature: 0,
                        model: "text-davinci-003",
                        max_tokens: 250,
						stop: null
                    }),
                    success: function (res) {
                        let txtResponse = res.choices[0].text;
						appendChatHistory(txtResponse).then(function () {
							$('#Answer').val(txtResponse);
                            $('#AnswerDateTime').val(new Date().toISOString());

fetch('@Url.Action("Question","OpenAI")', {
  method: 'POST',
  body: new FormData(document.getElementById('SaveQuestion')),
})
  .then(response => response.json())
  .then(res2 => {
    console.log(res2);
    loadQuestion();
  })
  .catch(error => {
    console.error(error);
  });


                        });
                    },
                    error: function (error) {
                        console.error(error);
                    }
                });
            });

            return false;
        });

        function reloadChatGPT() {
            $.ajax({
                url: '@Url.Action("History","OpenAI")',
                async: true,
                method: 'GET'
            }).done(d => {
                $('#historySection').html(d);
                chatHistory = document.getElementById("chatHistory");
                chatLength = document.querySelectorAll("li[id^='qa-']").length;
                loadQuestion();
            });
        }
	</script>
}

@section breadcrumb{
	<nav aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
			<li class="breadcrumb-item ">OpenAI</li>
			<li class="breadcrumb-item ">Chat GPT</li>
		</ol>
	</nav>
}

<div class="card">
	<div class="card-header">
		<h4 class="card-title">Open AI</h4>
	</div>
	<div class="card-body" id="historySection"></div>
	<div class="card-footer" id="questionSection"></div>
</div>
